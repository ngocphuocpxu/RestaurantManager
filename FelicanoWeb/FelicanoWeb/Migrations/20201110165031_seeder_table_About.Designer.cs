// <auto-generated />
using FelicanoWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FelicanoWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201110165031_seeder_table_About")]
    partial class seeder_table_About
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FelicanoWeb.Models.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FullContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Dinner"
                        });
                });

            modelBuilder.Entity("FelicanoWeb.Models.Contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Nguyên liệu chính vẫn là xôi nếp, nhưng để hấp dẫn hơn, người bán có thể chế biến theo nhiều kiểu như: xôi chiên, xôi lá chuối, xôi đậu xanh, xôi thịt, xôi khúc…",
                            ImageUrl = "https://jobsgo.vn/blog/wp-content/uploads/2019/09/com-tam.png",
                            Name = "Xôi",
                            Price = 10000
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Cơm tấm được nấu từ các hạt gạo vụn, bị bể rớt xuống khi sàng gạo. Sau đó ăn kèm với cơm là sườn, trứng, bì, chả…",
                            ImageUrl = "https://toplist.vn/images/800px/banh-my-pate-606.jpg",
                            Name = "Cơm tấm",
                            Price = 20000
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Mực ống được sắt miếng vừa phải và tẩm bột chiên giòn. Món ăn này được mọi lứa tuổi và vùng miền yêu thích vì rất dễ ăn.",
                            ImageUrl = "https://cdn.24h.com.vn/upload/3-2019/images/2019-08-16/10-1565953389-469-width1440height969.jpg",
                            Name = "Mực chiên",
                            Price = 50000
                        });
                });

            modelBuilder.Entity("FelicanoWeb.Models.FoodTag", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("FoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("FoodTag");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Món ngon Việt Nam"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Đồ ăn hấp dẫn"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Món ngon tuyệt vời"
                        });
                });

            modelBuilder.Entity("FelicanoWeb.Models.Blog", b =>
                {
                    b.HasOne("FelicanoWeb.Models.Category", "Category")
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Food", b =>
                {
                    b.HasOne("FelicanoWeb.Models.Category", "Category")
                        .WithMany("Foods")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FelicanoWeb.Models.FoodTag", b =>
                {
                    b.HasOne("FelicanoWeb.Models.Food", "Food")
                        .WithMany("FoodTags")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FelicanoWeb.Models.Tag", "Tag")
                        .WithMany("FoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Category", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Foods");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Food", b =>
                {
                    b.Navigation("FoodTags");
                });

            modelBuilder.Entity("FelicanoWeb.Models.Tag", b =>
                {
                    b.Navigation("FoodTags");
                });
#pragma warning restore 612, 618
        }
    }
}
